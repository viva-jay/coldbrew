steps:
#  - name: gcr.io/$PROJECT_ID/docker-compose
#    env:
#      - 'K6_CLOUD_TOKEN=${_K6_CLOUD_TOKEN}'
#    args: ['run',
#           'k6',
#           'run',
#           '--no-connection-reuse',
#           '--insecure-skip-tls-verify',
#           '--no-teardown',
#           '--no-thresholds',
#           '--no-setup',
#           '--no-usage-report',
#           '--quiet',
#           '--out',
#           'cloud',
#           '/scripts/script.js']

  # set firewall-rules
  - name: gcr.io/$PROJECT_ID/gcloud
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        gcloud compute firewall-rules create http-inbound \
        --allow tcp:80 \
        --target-tags ${_NETWORK_TAG}

#  # pull docker image(k6)
#  - name: gcr.io//docker
#    entrypoint: /bin/bash
#    args:
#      - '-c'
#      - |
#        docker pull grafana/k6:latest
#        || exit 0

  # build and tag docker image(k6)
  - name: gcr.io/cloud-builders/docker
    args: [
        'build',
        '-t', 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}',
        '--cache-from', '$gcr.io/$PROJECT_ID/k6',
        hub.docker.com/grafana/k6:latest
    ]

  # build docker image(nginx)
  - name: gcr.io/cloud-builders/docker
    args: [
        'build',
        '-t', 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}',
        '.'
    ]
    id: 'build-nginx'

  # build docker image(app)
  - name: gcr.io/cloud-builders/mvn
    args: ['compile', 'jib:build','-Dimage=eu.gcr.io/$PROJECT_ID/${_SERVICE_NAME}']
    dir: 'core'
    id: 'build-app'

  # deploy and run app instances
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        gcloud compute instances create-with-container ${_SERVICE_NAME}-vm --quiet \
              --zone=us-west1-b \
              --machine-type=e2-micro \
              --image-project=cos-cloud \
              --image-family=cos-97-lts \
              --container-image=gcr.io/$PROJECT_ID/${_SERVICE_NAME} \
              --container-restart-policy=always \
              --tags ${_NETWORK_TAG}
    waitFor: ['build-app']

  # deploy and run nginx instances
  - name: gcr.io/cloud-builders/gcloud
    entrypoint: /bin/bash
    args:
      - '-c'
      - |
        gcloud compute instances create-with-container ${_MOCK_SERVER}-1 ${_MOCK_SERVER}-2 --quiet \
              --zone=us-west1-b \
              --machine-type=e2-micro \
              --image-project=cos-cloud \
              --image-family=cos-97-lts \
              --container-image=gcr.io/$PROJECT_ID/{_MOCK_SERVER} \
              --container-restart-policy=always \
              --tags ${_NETWORK_TAG}
    waitFor: ['build-nginx']

  # after every run instance run k6
# store artifact
images:
  - 'gcr.io/$PROJECT_ID/${_MOCK_SERVER}'
  - 'gcr.io/$PROJECT_ID/k6'
# arguments
substitutions:
  _SERVICE_NAME: 'tiny-proxy'
  _NETWORK_TAG: 'load-test'
  _MOCK_SERVER: 'mock-http'
